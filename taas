#!/usr/bin/env python3

import itertools
import mmap
import os
import sys

def reverse_lines(filename):
    with open(filename, "rb") as f:
        with mmap.mmap(f.fileno(), 0, prot=mmap.PROT_READ) as contents:
            eol = len(contents)

            ## if the last byte of the file is a newline, back over it to avoid yielding an empty line
            if contents[eol-1] == ord(b"\n"):
                eol = eol - 1

            ## yield one line at a time
            while True:
                sol = contents.rfind(b"\n", 0, eol)
                if sol == -1:
                    break
                yield contents[sol+1:eol+1]
                eol = sol

directory = "/var/log"
os.chdir(directory)
file = os.path.realpath(sys.argv[1])

## as with chroot or docker volume shenanigans, this doesn't allow symlinks that point outside of /var/log
assert file.startswith(os.path.realpath(directory))

line_count = int(sys.argv[2])
needle = sys.argv[3].encode()
for l in itertools.islice(filter(lambda line: line.find(needle) != -1, reverse_lines(file)), line_count):
    sys.stdout.buffer.write(l)

# import resource
# print(resource.getrusage(resource.RUSAGE_SELF).ru_maxrss)
